name: CI - Code Coverage Check

on:
  pull_request:
    branches:
      - main

jobs:
  test_and_analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Código
        uses: actions/checkout@v4

      - name: Instalar .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restaurar Dependências
        run: dotnet restore ./pickframe.sln

      - name: Executar Testes com Cobertura
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet-coverage collect "dotnet test ./Tests/Tests/Tests.csproj" -f xml -o "coverage.xml"

      - name: Analisar Código no SonarCloud
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet-sonarscanner begin \
            /k:"pickframe_pickframe" \
            /o:"pickframe" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml

          dotnet build ./pickframe.sln --no-restore

          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Verificar Cobertura de Código
        run: |
          COVERAGE=$(cat coverage.opencover.xml | grep -oP 'line-rate="\K[0-9.]+')
          COVERAGE_PERCENT=$(echo "$COVERAGE * 100" | bc)
          REQUIRED_COVERAGE=80

          echo "Cobertura atual: $COVERAGE_PERCENT%"
          
          if (( $(echo "$COVERAGE_PERCENT < $REQUIRED_COVERAGE" | bc -l) )); then
            echo "Cobertura abaixo do esperado! ($COVERAGE_PERCENT% < $REQUIRED_COVERAGE%)"
            exit 1
          fi
